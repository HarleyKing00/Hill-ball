Gra z piłką class MainScene extends Phaser.Scene { constructor() { super(); this.distance = 0; this.bestScore = localStorage.getItem('bestScore') || 0; } preload() { this.load.image('ball', 'https://upload.wikimedia.org/wikipedia/commons/7/7a/Basketball.png'); } create() { this.cameras.main.setBackgroundColor('#87CEEB'); // Piłka this.ball = this.physics.add.image(100, 100, 'ball').setScale(0.05); this.ball.setBounce(0.3); this.ball.setCollideWorldBounds(false); // Podłoże - pagórki this.terrain = this.add.graphics(); this.points = []; let y = 400; for (let i = 0; i < 300; i++) { y = 400 + Math.sin(i * 0.4) * 60 + Math.cos(i * 0.15) * 40; this.points.push(new Phaser.Geom.Point(i * 50, y)); } this.drawGround(); // Wyniki this.scoreText = this.add.text(this.cameras.main.centerX, 50, '0', { fontSize: '48px', color: '#000', fontStyle: 'bold' }).setOrigin(0.5); this.bestText = this.add.text(this.cameras.main.centerX, 100, `Rekord: ${this.bestScore}`, { fontSize: '24px', color: '#000' }).setOrigin(0.5); // Sterowanie dotykiem this.isTouching = false; this.input.on('pointerdown', () => { this.isTouching = true; }); this.input.on('pointerup', () => { this.isTouching = false; }); } drawGround() { this.terrain.clear(); this.terrain.fillStyle(0x228B22, 1); this.terrain.beginPath(); this.terrain.moveTo(this.points[0].x, 600); for (let p of this.points) { this.terrain.lineTo(p.x, p.y); } this.terrain.lineTo(this.points[this.points.length - 1].x, 600); this.terrain.closePath(); this.terrain.fillPath(); } update() { this.ball.setGravityY(500); if (this.isTouching) { this.ball.setVelocityY(this.ball.body.velocity.y + 10); } this.cameras.main.scrollX = this.ball.x - 200; // Wynik this.distance = Math.floor(this.ball.x / 10) * 10; this.scoreText.setX(this.cameras.main.scrollX + this.cameras.main.centerX); this.bestText.setX(this.cameras.main.scrollX + this.cameras.main.centerX); this.scoreText.setText(this.distance); if (this.distance > this.bestScore) { this.bestScore = this.distance; localStorage.setItem('bestScore', this.bestScore); this.bestText.setText(`Rekord: ${this.bestScore}`); } } } const config = { type: Phaser.AUTO, width: 800, height: 600, physics: { default: 'arcade', arcade: { debug: false } }, scene: MainScene, }; new Phaser.Game(config); 
Masz teraz wersję działającą na telefonie:
• dotyk = piłka szybciej spada,
• wynik i rekord zapisywany lokalnie,
• pagórki są wygładzone,
• można wrzucić kod na hosting i uruchomić w mobilnej przeglądarce.
Jeśli chcesz, mogę Ci dodać dołki z wybiciem i efekt „skoku” w tym kodzie.